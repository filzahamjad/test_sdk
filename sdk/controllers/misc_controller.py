# -*- coding: utf-8 -*-

"""
    sdk

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from sdk.api_helper import APIHelper
from sdk.configuration import Configuration
from sdk.controllers.base_controller import BaseController

class MiscController(BaseController):

    """A Controller to access Endpoints in the sdk API."""


    def http_103_123_112_147_5555_auth_register(self,
                                                username,
                                                password,
                                                password_2,
                                                email,
                                                first_name,
                                                last_name):
        """Does a POST request to /register.

        TODO: type endpoint description here.

        Args:
            username (string): TODO: type description here. Example: 
            password (string): TODO: type description here. Example: 
            password_2 (string): TODO: type description here. Example: 
            email (string): TODO: type description here. Example: 
            first_name (string): TODO: type description here. Example: 
            last_name (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/register'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'Username': username,
            'Password': password,
            'Password2': password_2,
            'Email': email,
            'First name': first_name,
            'Last name': last_name
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        _context = self.execute_request(_request)
        self.validate_response(_context)

    def http_103_123_112_147_5555_auth_login(self,
                                             username,
                                             password):
        """Does a POST request to /login.

        TODO: type endpoint description here.

        Args:
            username (string): TODO: type description here. Example: 
            password (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/login'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'Username': username,
            'Password': password
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        _context = self.execute_request(_request)
        self.validate_response(_context)
